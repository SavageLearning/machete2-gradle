/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}
ext {
    dropwizardVersion = "2.0.9"
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    implementation "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-migrations:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-jdbi3:${dropwizardVersion}"
}

application {
    // Define the main class for the application.
    mainClassName = 'com.savagelearning.machete.MacheteApplication'
}

run {
    args 'server', 'machete.yml'
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.savagelearning.machete.MacheteApplication'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task migratePostgres(type: JavaExec) {
    group = "database"
	description = "Runs the database migration (Liquibase) command."
	classpath = sourceSets.main.runtimeClasspath
	environment(run.environment)
	main = mainClassName
	args = ["db", "migrate", "--migrations", "migrate src/main/resources/migrations.yaml"]
	// if (project.hasProperty("dry-run")) {
	// 	args += "--dry-run"
	// }
}